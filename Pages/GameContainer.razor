@page "/"
@using Microsoft.EntityFrameworkCore
@using DM5K.Components
@using DM5K.Data
@using DM5K.Models

@inject DM5KDbContext db
<div id="main-game-fullscreen-container">
    <div class="main-game-menu-buttons-container">
        <button @onclick="OnToggleNavMenu" class="main-game-menu-button button-primary">
            <span class="material-icons md-48">menu</span>
        </button>
        <button @onclick="OnRefresh" class="main-game-menu-button button-primary">
            <span class="material-icons md-48">sync</span>
        </button>
    </div>
    <div class="main-game-zoom-slider-container @(_menuExpanded ? "main-game-zoom-slider-container-expanded" : "")">
        <ZoomControl MaxValue="@_scaleMax" MinValue="@_scaleMin"
                     ZoomValue="@_scale" ScaleStep="@_scaleStep"
                     OnZoomSliderChanged="@HandleCanvasScaleChanged" />
    </div>
    <GameMenu Campaigns="@Campaigns" MenuExpanded="@_menuExpanded" />
    <div id="main-game-container" class="main-game-container @(_menuExpanded ? "": "main-game-container-expanded")">
        <GameCanvas @ref="_gameCanvasRef" Campaign="@SelectedCampaign"
                    Map="@SelectedMap" ScaleStep="@_scaleStep"
                    ScaleMin="@_scaleMin" ScaleMax="@_scaleMax"
                    OnScaleChanged="@HandleCanvasScaleChanged" />
    </div>
</div>

@code {

    public IEnumerable<Campaign> Campaigns { get; set; }
    public Campaign SelectedCampaign { get; set; }
    public Map SelectedMap { get; set; }

    private GameCanvas _gameCanvasRef { get; set; }
    private bool _menuExpanded { get; set; }
    private string _menuClass { get; set; }
    private double _scale { get; set; } = 1f;
    private double _scaleMin { get; set; } = 0.5f;
    private double _scaleMax { get; set; } = 1.5f;
    private double _scaleStep { get; set; } = 0.05f;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override Task OnInitializedAsync()
    {
        Campaigns = db.Campaigns.Include(x => x.Maps).Include(y => y.Characters).ToList();
        SelectedCampaign = Campaigns.FirstOrDefault();
        SelectedMap = SelectedCampaign.Maps.FirstOrDefault();
        return base.OnInitializedAsync();
    }

    private void OnToggleNavMenu()
    {
        _menuExpanded = !_menuExpanded;
        _gameCanvasRef.ResetMaxScroll();
        StateHasChanged();
    }

    private async Task OnRefresh()
    {
        StateHasChanged();
    }

    private void HandleCanvasScaleChanged(double scale)
    {
        _scale = scale;
        _gameCanvasRef.Zoom(scale);
        StateHasChanged();
    }
}
