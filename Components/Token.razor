@using DM5K.Data
@using DM5K.Models
@using DM5K.Helpers

@inject IJSRuntime jsr

<InputHandler CssClass="@(string.Format("token {0} {1}", IsOwned ? "token-owned" : "token-unowned", Container.DraggedTokens.ContainsKey(this) ? "token-selected" : ""))"
              CssStyle="@string.Format("left: {0}px; top: {1}px;", Character.X, Character.Y)"
              OnPressDown="@HandleOnPressDown"
              ID="@string.Format("character-id-{0}", Character.ID)">
    <ChildContent>
        <img src="@Character.Url" draggable="false" alt="Image" height="50" width="50" />
    </ChildContent>
</InputHandler>

@code {
    [CascadingParameter]
    GameCanvas Container { get; set; }

    [Parameter]
    public Character Character { get; set; }

    [Parameter]
    public bool IsOwned { get; set; }

    [Parameter]
    public int TileSize { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public void HandleOnPressDown(CanvasEventArgs e)
    {
        if (IsOwned)
        {
            if (!Container.DraggedTokens.ContainsKey(this))
            {
                Container.DraggedTokens.Add(this, new TokenPosition() { X = this.Character.X, Y = this.Character.Y });
            }
            jsr.InvokeAsync<string>("console.log", string.Format("token mousedown: x: {0}, y: {1}, dx: {2}, dy: {3}", e.StartX, e.StartY, e.DeltaX, e.DeltaY));
        }
    }
}
